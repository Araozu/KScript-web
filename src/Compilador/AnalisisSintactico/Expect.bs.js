// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var ErrorComun = Caml_exceptions.create("Expect-KanComp.ErrorComun");

var OpInvalida = Caml_exceptions.create("Expect-KanComp.OpInvalida");

function extraerToken(resLexer, msgError) {
  if (typeof resLexer === "number") {
    throw [
          ErrorComun,
          "" + (String(msgError) + " (EOF)")
        ];
  } else if (resLexer.tag) {
    throw [
          ErrorComun,
          "" + (String(msgError) + (" (" + (String(resLexer[0]) + ")")))
        ];
  } else {
    return resLexer[0];
  }
}

function _Any(resLexer, msgError, fnErrorLexer, fnEOF) {
  var fnErrorLexer$1 = fnErrorLexer !== undefined ? fnErrorLexer : (function (x) {
        return [
                ErrorComun,
                x
              ];
      });
  var fnEOF$1 = fnEOF !== undefined ? fnEOF : (function (x) {
        return [
                ErrorComun,
                x
              ];
      });
  if (typeof resLexer === "number") {
    throw Curry._1(fnEOF$1, "" + (String(msgError) + " (EOF)"));
  } else if (resLexer.tag) {
    throw Curry._1(fnErrorLexer$1, "" + (String(msgError) + (" (" + (String(resLexer[0]) + ")"))));
  } else {
    return /* tuple */[
            resLexer[0],
            resLexer[1]
          ];
  }
}

function _TNuevaLinea(resLexer, valorOpc, msgError) {
  var preToken = extraerToken(resLexer, msgError);
  if (preToken.tag) {
    throw [
          ErrorComun,
          msgError
        ];
  } else {
    var infoToken = preToken[0];
    if (valorOpc !== undefined && infoToken.valor !== valorOpc) {
      throw [
            ErrorComun,
            ""
          ];
    } else {
      return infoToken;
    }
  }
}

function _TIdentificador(resLexer, valorOpc, msgError) {
  var preToken = extraerToken(resLexer, msgError);
  if (preToken.tag === /* TIdentificador */1) {
    var infoToken = preToken[0];
    if (valorOpc !== undefined && infoToken.valor !== valorOpc) {
      throw [
            ErrorComun,
            ""
          ];
    } else {
      return infoToken;
    }
  } else {
    throw [
          ErrorComun,
          msgError
        ];
  }
}

function _PC_LET(resLexer, valorOpc, msgError) {
  var preToken = extraerToken(resLexer, msgError);
  if (preToken.tag === /* PC_LET */12) {
    var infoToken = preToken[0];
    if (valorOpc !== undefined && infoToken.valor !== valorOpc) {
      throw [
            ErrorComun,
            ""
          ];
    } else {
      return infoToken;
    }
  } else {
    throw [
          ErrorComun,
          msgError
        ];
  }
}

function _PC_CONST(resLexer, valorOpc, msgError) {
  var preToken = extraerToken(resLexer, msgError);
  if (preToken.tag === /* PC_CONST */13) {
    var infoToken = preToken[0];
    if (valorOpc !== undefined && infoToken.valor !== valorOpc) {
      throw [
            ErrorComun,
            ""
          ];
    } else {
      return infoToken;
    }
  } else {
    throw [
          ErrorComun,
          msgError
        ];
  }
}

function _TOperador(resLexer, valorOpc, msgError) {
  var preToken = extraerToken(resLexer, msgError);
  if (preToken.tag === /* TOperador */7) {
    var infoToken = preToken[0];
    if (valorOpc !== undefined && infoToken.valor !== valorOpc) {
      throw [
            ErrorComun,
            ""
          ];
    } else {
      return infoToken;
    }
  } else {
    throw [
          ErrorComun,
          msgError
        ];
  }
}

exports.ErrorComun = ErrorComun;
exports.OpInvalida = OpInvalida;
exports.extraerToken = extraerToken;
exports._Any = _Any;
exports._TNuevaLinea = _TNuevaLinea;
exports._TIdentificador = _TIdentificador;
exports._PC_LET = _PC_LET;
exports._PC_CONST = _PC_CONST;
exports._TOperador = _TOperador;
/* No side effect */
