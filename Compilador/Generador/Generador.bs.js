// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$String = require("bs-platform/lib/js/string.js");

function generarJs(expr, toplevel, nivel) {
  var indentacionNivel = $$String.make((nivel << 2), /* " " */32);
  var indentacionNivelSig = $$String.make(((nivel + 1 | 0) << 2), /* " " */32);
  var indentacionNivelAnt = nivel === 0 ? "" : $$String.make(((nivel - 1 | 0) << 2), /* " " */32);
  switch (expr.tag | 0) {
    case /* EIdentificador */0 :
        return expr[0].valor.valor;
    case /* EUnidad */1 :
        return "undefined";
    case /* ENumero */2 :
        return expr[0].valor.toString();
    case /* ETexto */3 :
        var info = expr[0];
        return "\"" + (info.valor + "\"");
    case /* EBool */4 :
        var info$1 = expr[0];
        if (info$1.valor) {
          return "true";
        } else {
          return "false";
        }
    case /* EOperador */5 :
        return "/* No implementado :c */";
    case /* EOperadorApl */6 :
        var eOpApl = expr[0];
        var operador = eOpApl.op.valor.valor;
        var jsExprIzq = generarJs(eOpApl.izq, false, nivel);
        var jsExprDer = generarJs(eOpApl.der, false, nivel);
        return "(" + (jsExprIzq + (") " + (operador + (" (" + (jsExprDer + ")")))));
    case /* EFuncion */7 :
        var efuncion = expr[0];
        var jsFun = generarJs(efuncion.fn, false, nivel);
        var jsParam = generarJs(efuncion.param, false, nivel);
        return "" + (String(jsFun) + ("(" + (String(jsParam) + ")")));
    case /* EDeclaracion */8 :
        var dec = expr[0];
        var inicio = dec.mut ? "let" : "const";
        var id = dec.id.valor.valor;
        var valor = generarJs(dec.valor, false, nivel + 1 | 0);
        var match = dec.valor;
        if (match.tag === /* EDeclaracion */8) {
          return inicio + (" " + (id + (" = (() => {\n" + (indentacionNivelSig + (valor + ("\n" + (indentacionNivelSig + ("return undefined;\n" + (indentacionNivel + "})()")))))))));
        } else {
          return inicio + (" " + (id + (" = " + valor)));
        }
    case /* EBloque */9 :
        var exprs = expr[0];
        var toplevel$1 = toplevel;
        var generarInner = function (exprs) {
          var tmp;
          if (exprs) {
            var es = exprs[1];
            var e = exprs[0];
            tmp = List.length(es) === 0 ? (
                toplevel$1 ? generarJs(e, false, nivel) + ";" : (
                    e.tag === /* EDeclaracion */8 ? generarJs(e, false, nivel) + (";\n" + (indentacionNivel + "return undefined;")) : "return " + (generarJs(e, false, nivel) + ";")
                  )
              ) : generarJs(e, false, nivel) + (";" + ((
                    toplevel$1 ? "\n" : ""
                  ) + ("\n" + generarInner(es))));
          } else {
            tmp = "";
          }
          return indentacionNivel + tmp;
        };
        if (toplevel$1) {
          return generarInner(exprs);
        } else {
          return "(() => {\n" + (generarInner(exprs) + ("\n" + (indentacionNivelAnt + "})()")));
        }
    
  }
}

exports.generarJs = generarJs;
/* No side effect */
